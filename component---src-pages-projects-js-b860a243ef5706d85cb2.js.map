{"version":3,"sources":["webpack:///./src/components/project-list.js","webpack:///./src/pages/projects.js","webpack:///./src/components/_shared/styled-separator.js","webpack:///./src/components/tech-list.js","webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/components/_shared/styled-content-link.js","webpack:///./src/components/_shared/styled-text-section.js"],"names":["StyledProject","styled","article","_templateObject","_taggedTemplateLiteralLoose","StyledHeader","header","_templateObject2","StyledLinkContainer","section","_templateObject3","flexEnd","StyledInfoContainer","_templateObject4","StyledProjectText","StyledTextSection","_templateObject5","ProjectList","_ref","projects","map","project","title","frontmatter","demoLink","demo_link","repoLink","repo_link","demoLinkLabel","repoLinkLabel","React","createElement","key","StyledContentLink","href","target","rel","StyledH2","aria-label","Icon","icon","prefix","dangerouslySetInnerHTML","__html","html","TechList","techs","StyledProjectsH1","StyledH1","Projects","nodes","data","allMarkdownRemark","Layout","menuLinks","blogMenuLinks","SEO","StyledFullHeightSection","StyledSeparator","div","StyledTechContainer","StyledTag","span","tech","h1","h2","a","contentBox"],"mappings":"sPAUMA,EAAgBC,IAAOC,QAAOC,MAAAC,YAAA,+EAK9BC,EAAeJ,IAAOK,OAAMC,MAAAH,YAAA,+DAI5BI,EAAsBP,IAAOQ,QAAOC,MAAAN,YAAA,+RACtCO,KAmBEC,EAAsBX,IAAOQ,QAAOI,MAAAT,YAAA,8EAKpCU,EAAoBb,YAAOc,IAAPd,CAAyBe,MAAAZ,YAAA,yIAiDpCa,EAxCK,SAAHC,GACf,OAD6BA,EAARC,SACLC,KAAI,SAACC,GACnB,IAAMC,EAAQD,EAAQE,YAAYD,MAC5BE,EAAWH,EAAQE,YAAYE,UAC/BC,EAAWL,EAAQE,YAAYI,UAC/BC,EAAa,oBAAuBN,EAAK,QACzCO,EAAa,oBAAuBP,EAAK,QAE/C,OACEQ,IAAAC,cAAC/B,EAAa,CAACgC,IAAKV,GAClBQ,IAAAC,cAAC1B,EAAY,KACXyB,IAAAC,cAACE,IAAiB,CAACC,KAAMV,IAAsBE,GAAsB,KAAKS,OAAO,SAASC,IAAI,YAC5FN,IAAAC,cAACM,IAAQ,KAAEf,IAEbQ,IAAAC,cAACvB,EAAmB,KACjBkB,GACCI,IAAAC,cAAA,KAAGG,KAAMR,EAAUS,OAAO,SAASC,IAAI,WAAWd,MAAM,kBAAkBgB,aAAYT,GACpFC,IAAAC,cAACQ,IAAI,CAACC,KAAK,SAASC,OAAO,SAG9BjB,GACCM,IAAAC,cAAA,KAAGG,KAAMV,EAAUW,OAAO,SAASC,IAAI,WAAWd,MAAM,YAAYgB,aAAYV,GAC9EE,IAAAC,cAACQ,IAAI,CAACC,KAAK,yBAKnBV,IAAAC,cAACnB,EAAmB,KAClBkB,IAAAC,cAACjB,EAAiB,CAAC4B,wBAAyB,CAAEC,OAAQtB,EAAQuB,QAC9Dd,IAAAC,cAACc,IAAQ,CAACC,MAAOzB,EAAQE,YAAYuB,c,gDCxEzCC,EAAmB9C,YAAO+C,IAAP/C,CAAgBE,MAAAC,YAAA,+BAoB1B6C,UAjBE,SAAH/B,GAIP,IAFkBgC,EAAKhC,EAD5BiC,KACEC,kBAAqBF,MAGvB,OACEpB,IAAAC,cAACsB,IAAM,CAACC,UAAWC,KACjBzB,IAAAC,cAACyB,IAAG,CAAClC,MAAM,aACXQ,IAAAC,cAAC0B,IAAuB,KACtB3B,IAAAC,cAACgB,EAAgB,KAAC,YAClBjB,IAAAC,cAAC2B,IAAe,MAChB5B,IAAAC,cAACd,EAAW,CAACE,SAAU+B,Q,sFCtBlBQ,E,UAAkBzD,EAAO0D,IAAGxD,MAAAC,YAAA,wG,qGCGnCwD,EAAsB3D,IAAOQ,QAAON,MAAAC,YAAA,uEAKpCyD,EAAY5D,IAAO6D,KAAIvD,MAAAH,YAAA,oQAiCdyC,IAjBE,SAAH3B,GAAmB,IAAb4B,EAAK5B,EAAL4B,MAClB,OACEhB,IAAAC,cAAC6B,EAAmB,KACjBd,EAAM1B,KAAI,SAAC2C,GAAI,OACdjC,IAAAC,cAAC8B,EAAS,CAAC7B,IAAK+B,GACdjC,IAAAC,cAACQ,IAAI,CAACC,KAAK,gBACVuB,S,wIC9BEf,EAAW/C,IAAO+D,GAAE7D,MAAAC,YAAA,wUAqBpBiC,EAAWpC,IAAOgE,GAAE1D,MAAAH,YAAA,qQ,sFCrBpB6B,E,UAAoBhC,EAAOiE,EAAC/D,MAAAC,YAAA,qH,8GCC5BW,EAAoBd,IAAOQ,QAAON,MAAAC,YAAA,gPAG3C+D","file":"component---src-pages-projects-js-b860a243ef5706d85cb2.js","sourcesContent":["import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\nimport TechList from './tech-list';\nimport { StyledContentLink } from './_shared/styled-content-link';\nimport { StyledH2 } from './_shared/styled-headings';\nimport { flexEnd } from './_shared/styled-mixins';\nimport { StyledTextSection } from './_shared/styled-text-section';\n\nconst StyledProject = styled.article`\n  display: flex;\n  flex-direction: column;\n  padding-top: 2.5rem;\n`;\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n`;\nconst StyledLinkContainer = styled.section`\n  ${flexEnd};\n  margin: 10px 0;\n\n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--body-color);\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  }\n\n  & svg {\n    fill: currentColor;\n    margin: 0 0.5rem;\n  }\n`;\nconst StyledInfoContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst StyledProjectText = styled(StyledTextSection)`\n  > p {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n    overflow: hidden;\n  }\n`;\n\nconst ProjectList = ({ projects }) => {\n  return projects.map((project) => {\n    const title = project.frontmatter.title;\n    const demoLink = project.frontmatter.demo_link;\n    const repoLink = project.frontmatter.repo_link;\n    const demoLinkLabel = `featured project ${title} demo`;\n    const repoLinkLabel = `featured project ${title} repo`;\n\n    return (\n      <StyledProject key={title}>\n        <StyledHeader>\n          <StyledContentLink href={demoLink ? demoLink : repoLink ? repoLink : '#'} target=\"_blank\" rel=\"noopener\">\n            <StyledH2>{title}</StyledH2>\n          </StyledContentLink>\n          <StyledLinkContainer>\n            {repoLink && (\n              <a href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"github\" prefix=\"fab\" />\n              </a>\n            )}\n            {demoLink && (\n              <a href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Demo Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"external-link-alt\" />\n              </a>\n            )}\n          </StyledLinkContainer>\n        </StyledHeader>\n        <StyledInfoContainer>\n          <StyledProjectText dangerouslySetInnerHTML={{ __html: project.html }} />\n          <TechList techs={project.frontmatter.techs} />\n        </StyledInfoContainer>\n      </StyledProject>\n    );\n  });\n};\n\nProjectList.propTypes = {\n  projects: PropTypes.array.isRequired,\n};\n\nexport default ProjectList;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport ProjectList from '../components/project-list';\nimport SEO from '../components/seo';\nimport { blogMenuLinks } from '../components/_config/menu-links';\nimport { StyledH1 } from '../components/_shared/styled-headings';\nimport { StyledFullHeightSection } from '../components/_shared/styled-section';\nimport { StyledSeparator } from '../components/_shared/styled-separator';\n\nconst StyledProjectsH1 = styled(StyledH1)`\n  margin-top: 3rem;\n`;\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { nodes },\n  },\n}) => {\n  return (\n    <Layout menuLinks={blogMenuLinks}>\n      <SEO title=\"Projects\" />\n      <StyledFullHeightSection>\n        <StyledProjectsH1>Projects</StyledProjectsH1>\n        <StyledSeparator />\n        <ProjectList projects={nodes} />\n      </StyledFullHeightSection>\n    </Layout>\n  );\n};\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"D MMMM, YYYY\")\n          title\n          repo_link\n          demo_link\n          techs\n        }\n        html\n      }\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledSeparator = styled.div`\n  height: 1px;\n  width: 100%;\n  margin-top: 3rem;\n  background-color: var(--body-color);\n`;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\n\nconst StyledTechContainer = styled.section`\n  margin-top: 0.8rem;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst StyledTag = styled.span`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n\n  color: var(--body-color);\n  margin: 0 1rem 0.5rem 0;\n\n  & > svg {\n    color: var(--primary-color);\n    height: 0.8rem;\n    margin-right: 0.25rem;\n  }\n`;\n\nconst TechList = ({ techs }) => {\n  return (\n    <StyledTechContainer>\n      {techs.map((tech) => (\n        <StyledTag key={tech}>\n          <Icon icon=\"caret-right\" />\n          {tech}\n        </StyledTag>\n      ))}\n    </StyledTechContainer>\n  );\n};\n\nTechList.propTypes = {\n  techs: PropTypes.array.isRequired,\n};\n\nexport default TechList;\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  // margin: 10px 0;\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  // margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContentLink = styled.a`\n  text-decoration: none;\n\n  &:hover > * {\n    cursor: pointer;\n    color: var(--primary-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { contentBox } from './styled-mixins';\n\nexport const StyledTextSection = styled.section`\n  white-space: pre-line;\n\n  ${contentBox}\n  max-width: unset;\n  max-height: 180px;\n  position: relative;\n  padding: 10px;\n  margin: 0;\n\n  > p {\n    height: 100%;\n    margin: 0;\n    font-size: 0.8rem;\n    overflow: hidden;\n  }\n`;\n"],"sourceRoot":""}